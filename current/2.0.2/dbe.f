C
C PURPOSE: ADMINISTERS CALLING FOR SYNTHESIS OF M1  LINES AT EACH VOXEL
C
C INPUTS: 
C
C OUTPUTS:
C
C COMMON:
C
C COMMENTS: OCTOBER 6, 1999, P. JUDGE
C
	SUBROUTINE DBE
C
C  SUBROUTINE FOR GENERATION OF EMISSION COEFFICIENTS
C
	INCLUDE 'PREC'
	INCLUDE 'PARAM'
	INCLUDE 'CSE'
	INCLUDE 'CGRID'
	INCLUDE 'CATOM'
	INCLUDE 'CATMOS'
	INCLUDE 'CSLINE'
	INCLUDE 'CORON'
	INCLUDE 'CCONST'
	INCLUDE 'CINPUT'
	INCLUDE 'CINTS'
	INCLUDE 'CLU'
C
     	DIMENSION AA(MJTOT,MJTOT),BB(MJTOT)
     	DIMENSION T0(0:3,0:2)
	INTEGER*2 ICMP
	LOGICAL DISK,IGNORE
        DIMENSION SUMS(MLINE,0:4)
C
C  LOOP OVER THE LOS COORDINATE
C
	DO KR=1,NLINE
	   DO M=0,4
	      DO NY=1,NQ(KR)
		 EMISS(KR,M,NY)=ZERO
	      END DO
	   END DO
	END DO
C       
C       CALCULATE SOLAR PARAMETERS (HEIGHT, DENSITY, TEMPERATURE, 
C  MICROTURBULENCE, MAGNETIC FIELD IN CORONA)
C       
	GX2=GX*GX
	GY2=GY*GY
	GZ2=GZ*GZ
	RRR=GZ*GZ+GY*GY
	
C       
	ALPHA=-ATAN2(GX,SQRT(RRR))
C       
C       
	CALL PROFIL
C       
C       LTE POPULATIONS AND COLLISIONAL RATES TO BE STORED
C       
	IF(ICOLL .NE. 0) THEN 
	   CALL LTEPOP
	   CALL COLCAL
	ENDIF
C       
C       BUILD AND SOLVE STATISTICAL EQUILIBRIUM EQUATIONS
C       
	CALL SE0_BUILD(NDIM)
	CALL SOLVE(NDIM,AA,BB)
	CALL SE0_COPY(NDIM,BB)
C       
C       SOLVE FOR EMERGENT STOKES PROFILES
C       
	CALL T0TENS(T0)
	QN=QNORM*1.E5/CC
	DO KR=1,NLINE
	   WW=ALAMB(KR)
	   IF(WW .GE. WLMIN .AND. WW .LE. WLMAX) THEN 
	      CALL EMISSION(KR,T0)
	      IJ1=JRAD(KR)
	      SUMS(KR,4)=RHO(IJ1,2)/RHO(IJ1,0)
	      IF(IWLINE .GT. 0) WRITE (LDB) ((EMISS(KR,ISS,NY),ISS=0,3),NY=1,nq(kr))
	      DO IM=0,3
		 SUMS(KR,IM)=0.
		 DO NY=1,NQ(KR)-1
		    SIGN=+1.
		    ADD=EMISS(KR,IM,NY)
		    IF(IM .GE. 3 .AND. Q(NY,KR) .LT. 0.) SIGN=-1.
		    SUMS(KR,IM)=SUMS(KR,IM) + SIGN*ADD*WQ(NY,KR)*WW
		 ENDDO
		 
	      END DO
C
C  write compressed integer values
C
C	      WRITE(LDB) ( SUMS(KR,IM)/SUMS(1,0),IM=0,3 )
C	      WRITE(LDB) ( ICMP( SUMS(KR,IM) / SUMS(1,0) ),IM=0,3 ) 
		  WRITE(LDB) ( ICMP( SUMS(KR,IM)),IM=0,3 ) 

	   ENDIF
	END DO
	RETURN
	END
C
C	
C
	INTEGER*2 FUNCTION ICMP(X)
	INCLUDE 'PREC'
	IMX=32767.
C	ALMX=0.
C	ALMN=-15.
C	D=ALMX-ALMN
	D=15.
C	
C  get integers 
C
	IF(X .GE. 0.) THEN
	   A=LOG10(X)
	   ICMP= -A/D*IMX
	ELSE
	   A=LOG10(-X)
	   ICMP=   +A/D* IMX
	ENDIF
	RETURN
	END

